AWSTemplateFormatVersion: 2010-09-09
Description: Weather Notifier Lambda function
    
Parameters:
    BucketName:
        Description: S3 Bucket
        Type: String
        
    NotifyAlexURL:
        Description: Notify Me skill URL
        Type: String
    
    NotifyAlexAccessCode:
        Description: Notify Me access code
        Type: String

    TopicArn:
        Description: The SNS topic to send email notification
        Type: String
    
    Latitude:
        Description: Latitude of the location
        Type: String
    
    Longtitude:
        Description: Longtitude of the location
        Type: String
    
    Units:
        Description: the units parameter to query weather
        Type: String
    
    Atmosphere:
        Description: the group code for Atmosphere
        Type: Number
    
    Probability:
        Description: the threshold to determine if it will rain
        Type: Number
    
Resources:

    WeatherNotifierFunctionRole:
        Type: AWS::IAM::Role
        Properties:
            AssumeRolePolicyDocument:
                Version: '2012-10-17'
                Statement:
                -   Effect: Allow
                    Principal:
                        Service:
                        - lambda.amazonaws.com
                    Action:
                    - sts:AssumeRole
            Policies:
                -   PolicyName: Allow-logs
                    PolicyDocument:
                        Version: '2012-10-17'
                        Statement:
                        -   Effect: Allow
                            Action:
                            - 'logs:CreateLogGroup'
                            - 'logs:CreateLogStream'
                            - 'logs:PutLogEvents'
                            Resource: arn:aws:logs:*:*:*                   
                -   PolicyName: Allow-sns
                    PolicyDocument:
                        Version: '2012-10-17'
                        Statement:
                        -   Effect: Allow
                            Action:
                            - 'sns:Publish'
                            Resource: arn:aws:sns:*:*:*
                

    WeatherNotifierFunction:
        Type: AWS::Lambda::Function
        Properties:
            Runtime: python3.8
            Description: Function to notify rainy weather.
            Handler: src/lambda_function.lambda_handler
            Role: 
                Fn::GetAtt: [ "WeatherNotifierFunctionRole", "Arn" ]
            Environment:
                Variables:
                    PYTHONPATH: "/var/task/src:/opt/python"
                    PATH: "/opt/bin:/opt/bin/lib"
                    NotifyAlexURL: 
                        Ref: NotifyAlexURL
                    NotifyAlexAccessCode:
                        Ref: NotifyAlexAccessCode
                    Latitude:
                        Ref: Latitude
                    Longtitude:
                        Ref: Longtitude
                    TopicArn:
                        Ref: TopicArn
                    Units:
                        Ref: Units
                    Atmosphere:
                        Ref: Atmosphere
                    Probability:
                        Ref: Probability
            Timeout: 60
            MemorySize: 256
            Code:
                S3Bucket: 
                    Ref: BucketName
                S3Key: 
                    Fn::Sub: 'WeatherNotifierFunction.zip'
            Layers:
                - Ref: WeatherNotifierLayer

    WeatherNotifierLayer:
        Type: AWS::Lambda::LayerVersion
        Properties:
            CompatibleRuntimes:
                - python3.8
            Content:
                S3Bucket: 
                    Ref: BucketName
                S3Key: 
                    Fn::Sub: 'WeatherNotifierLayer.zip'
            Description: Layer for Python3.8
    
    ScheduleRule:
        Type: AWS::Events::Rule
        Properties:
            Name: 'ScheduleRule'
            Description: 'Trigger 7.30 a.m. NYT every weekday'
            ScheduleExpression: 'cron(30 11,16 ? * 2-6 *)'
            State: 'ENABLED'
            Targets: 
               - 
                 Arn:
                    Fn::GetAtt:
                       - 'WeatherNotifierFunction'
                       - 'Arn'
                 Id: 'TargetFunction1'
    PermissionForEventsToInvokeLambda:
        Type: AWS::Lambda::Permission
        Properties: 
             FunctionName: !Ref WeatherNotifierFunction
             Action: lambda:InvokeFunction
             Principal: events.amazonaws.com
             SourceArn: 
                Fn::GetAtt: 
                  - ScheduleRule
                  - Arn
